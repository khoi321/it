DIEN PHIEU

#include <bits/stdc++.h>
using namespace std;
const int N=1e5+7;
int a[N],t[4*N];
void build(int v,int l,int r){
    if(l==r){
        t[v]=a[l];
        return;
    }
    int mid=(l+r)/2;
    build(v*2,l,mid);
    build(2*v+1,mid+1,r);
    t[v]=max(t[v*2],t[v*2+1]);
}
int truy(int v,int tl,int tr,int l,int r){
    if(l>r){
        return INT_MIN;
    }
    if(l<=tr && tr<=r){
        return t[v];
    }
    int tmid=(tl+tr)/2;
    int s=truy(2*v,tl,tmid,l,min(tmid,r));
    int c=truy(2*v+1,tmid+1,tr,max(tmid+1,l),r);
    return max(s,c);
}
int main(){
    int n,m;
    cin>>n>>m;
    for(int i=1;i<=n;i++){
        cin>>a[i];
    }
    build(1,1,n);
    while(m--){
        int x,y;
        cin>>x>>y;
        cout<<truy(1,1,n,x,y)<<endl;
    }
}

==============================================================================================
lvt

#include <bits/stdc++.h>
using namespace std;

const int N=1e5+7;
int a[N],t[N*4];

void build(int v,int l,int r){
    if(l==r){
        t[v]=a[l];
        return;
    }
    int mid=(l+r)/2;
    build(v*2,l,mid);
    build(v*2+1,mid+1,r);
    t[v]=min(t[v*2],t[v*2+1]);
}

int truy(int v,int tl,int tr,int l,int r){
    if(l>r) return INT_MAX;
    if(l<=tl && tr<=r) return t[v];
    int mid=(tl+tr)/2;
    int s1=truy(2*v,tl,mid,l,min(r,mid));
    int s2=truy(2*v+1,mid+1,tr,max(l,mid+1),r);
    return min(s1,s2);
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);

    int T;
    cin>>T;
    while(T--){
        int n,k;
        cin>>n>>k;
        for(int i=1;i<=n;i++) cin>>a[i];

        build(1,1,n);
        
        for(int i=1;i<=n-k+1;i++){
            cout<<truy(1,1,n,i,i+k-1)<<" ";
        }
        cout<<endl;
    }
}


==============================================================
am thanh yeu thich

#include <bits/stdc++.h>
using namespace std;
const int N=2e5+7;
int n, m, c, a[N];
int caymax[N*4], caymin[N*4];

void build(int id,int l,int r){
    if(l==r){
        caymax[id]=a[l];
        caymin[id]=a[l];
        return;
    }
    int mid=(l+r)/2;
    build(id*2,l,mid);
    build(id*2+1,mid+1,r);
    caymax[id]=max(caymax[id*2],caymax[id*2+1]);
    caymin[id]=min(caymin[id*2],caymin[id*2+1]);
}

int timmax(int id,int l,int r,int u,int v){
    if(v<l || r<u) return INT_MIN;
    if(u<=l && r<=v) return caymax[id];
    int mid=(l+r)/2;
    return max(timmax(id*2,l,mid,u,v),timmax(id*2+1,mid+1,r,u,v));
}

int timmin(int id,int l,int r,int u,int v){
    if(v<l || r<u) return INT_MAX;
    if(u<=l && r<=v) return caymin[id];
    int mid=(l+r)/2;
    return min(timmin(id*2,l,mid,u,v),timmin(id*2+1,mid+1,r,u,v));
}

int main(){
    ios::sync_with_stdio(0);cin.tie(0);
    cin>>n>>m>>c;
    for(int i=1;i<=n;i++)cin>>a[i];
    build(1,1,n);

    int dem=0;
    for(int i=1;i<=n-m+1;i++){
        int maxx=timmax(1,1,n,i,i+m-1);
        int minn=timmin(1,1,n,i,i+m-1);
        if(maxx-minn<=c){
            dem++;
        }
    }

    cout<<dem;
}

==============================================================
vdv manh nhat

#include <bits/stdc++.h>
using namespace std;
const int N=1e5+7;
int a[N],t[4*N];
void build(int v,int l,int r){
    if(l==r){
        t[v]=a[l];
        return;
    }
    int mid=(l+r)/2;
    build(2*v,l,mid);
    build(2*v+1,mid+1,r);
    t[v]=max(t[2*v],t[2*v+1]);
}
int truy(int v,int tl,int tr,int l,int r){
    if(l>r){
        return INT_MIN;
    }
    if(l<=tr && tr<=r){
        return t[v];
    }
    int tmid=(tl+tr)/2;
    int p=truy(2*v,tl,tmid,l,min(r,tmid));
    int x=truy(2*v+1,tmid+1,tr,max(l,tmid+1),r);
    return max(p,x);
}
int main(){
    int q;
    cin>>q;
    while(q--){
        int n,m;
        cin>>n>>m;
        for(int i=1;i<=n;i++){
            cin>>a[i];

        }
        build(1,1,n);
        for(int i=1;i<=n-m+1;i++){
            cout<<truy(1,1,n,i,i+m-1)<<" ";
        }
        cout<<endl;
    }
}



==================================================================
